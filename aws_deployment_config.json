{
  "app_name": "traitor-track",
  "environment": "production",
  "database": "postgresql",
  "region": "ap-south-1",
  "components": [
    {
      "type": "ALB",
      "status": "configured",
      "config": {
        "name": "traitor-track-alb",
        "type": "application",
        "scheme": "internet-facing",
        "subnets": [
          "subnet-1",
          "subnet-2"
        ],
        "security_groups": [
          "sg-production"
        ],
        "tags": [
          {
            "Key": "Environment",
            "Value": "Production"
          },
          {
            "Key": "Application",
            "Value": "TraitorTrack"
          }
        ]
      }
    },
    {
      "type": "ECS",
      "status": "configured",
      "config": {
        "clusterName": "traitor-track-cluster",
        "capacityProviders": [
          "FARGATE",
          "FARGATE_SPOT"
        ],
        "defaultCapacityProviderStrategy": [
          {
            "capacityProvider": "FARGATE",
            "weight": 1,
            "base": 2
          },
          {
            "capacityProvider": "FARGATE_SPOT",
            "weight": 4
          }
        ]
      }
    },
    {
      "type": "CloudFront",
      "status": "configured",
      "config": {
        "CallerReference": "traitor-track-1756120627.836629",
        "Comment": "Traitor Track Production CDN",
        "DefaultRootObject": "index.html",
        "Origins": {
          "Quantity": 1,
          "Items": [
            {
              "Id": "traitor-track-origin",
              "DomainName": "traitortrack.replit.app",
              "CustomOriginConfig": {
                "HTTPPort": 443,
                "HTTPSPort": 443,
                "OriginProtocolPolicy": "https-only"
              }
            }
          ]
        },
        "DefaultCacheBehavior": {
          "TargetOriginId": "traitor-track-origin",
          "ViewerProtocolPolicy": "redirect-to-https",
          "TrustedSigners": {
            "Enabled": false,
            "Quantity": 0
          },
          "ForwardedValues": {
            "QueryString": true,
            "Cookies": {
              "Forward": "all"
            }
          },
          "MinTTL": 0,
          "DefaultTTL": 86400,
          "MaxTTL": 31536000
        },
        "Enabled": true,
        "PriceClass": "PriceClass_100"
      }
    },
    {
      "type": "AutoScaling",
      "status": "configured",
      "config": {
        "min_capacity": 2,
        "max_capacity": 20,
        "target_cpu": 70,
        "target_memory": 80,
        "scale_out_cooldown": 60,
        "scale_in_cooldown": 180,
        "policies": [
          {
            "name": "cpu-scaling",
            "metric": "ECSServiceAverageCPUUtilization",
            "target": 70
          },
          {
            "name": "memory-scaling",
            "metric": "ECSServiceAverageMemoryUtilization",
            "target": 80
          },
          {
            "name": "request-scaling",
            "metric": "ALBRequestCountPerTarget",
            "target": 1000
          }
        ]
      }
    },
    {
      "type": "HealthChecks",
      "status": "configured",
      "config": {
        "endpoints": [
          {
            "path": "/health",
            "interval": 30,
            "timeout": 5,
            "threshold": 2
          },
          {
            "path": "/api/health",
            "interval": 60,
            "timeout": 10,
            "threshold": 3
          }
        ],
        "alb_health_check": {
          "path": "/health",
          "interval": 30,
          "timeout": 5,
          "healthy_threshold": 2,
          "unhealthy_threshold": 3
        }
      }
    },
    {
      "type": "Security",
      "status": "configured",
      "config": {
        "waf_rules": [
          "SQLi protection",
          "XSS protection",
          "Rate limiting (2000 req/min)",
          "Geo blocking (if needed)",
          "IP reputation lists"
        ],
        "ssl_certificate": "AWS Certificate Manager",
        "security_groups": {
          "alb": "Allow 80, 443 from 0.0.0.0/0",
          "app": "Allow 5000 from ALB only",
          "db": "Allow 5432 from app only"
        },
        "encryption": {
          "at_rest": "AES-256",
          "in_transit": "TLS 1.2+"
        }
      }
    },
    {
      "type": "Monitoring",
      "status": "configured",
      "config": {
        "cloudwatch": {
          "metrics": [
            "CPU Utilization",
            "Memory Utilization",
            "Request Count",
            "Error Rate",
            "Response Time"
          ],
          "alarms": [
            {
              "metric": "CPU",
              "threshold": 80,
              "action": "scale-out"
            },
            {
              "metric": "Memory",
              "threshold": 85,
              "action": "scale-out"
            },
            {
              "metric": "ErrorRate",
              "threshold": 5,
              "action": "notify"
            },
            {
              "metric": "ResponseTime",
              "threshold": 2000,
              "action": "notify"
            }
          ],
          "logs": {
            "retention": 30,
            "streams": [
              "application",
              "access",
              "error"
            ]
          }
        },
        "x-ray": {
          "tracing": "enabled",
          "sampling_rate": 0.1
        }
      }
    },
    {
      "type": "Backup",
      "status": "configured",
      "config": {
        "database": {
          "strategy": "PostgreSQL remains on Neon (already backed up)",
          "neon_features": [
            "Point-in-time recovery",
            "Automatic backups",
            "Cross-region replication available"
          ]
        },
        "application": {
          "docker_images": "Stored in ECR with versioning",
          "configuration": "Stored in AWS Systems Manager Parameter Store",
          "static_files": "S3 with versioning enabled"
        },
        "recovery": {
          "rto": "< 1 hour",
          "rpo": "< 15 minutes"
        }
      }
    }
  ]
}