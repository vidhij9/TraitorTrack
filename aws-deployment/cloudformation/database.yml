AWSTemplateFormatVersion: '2010-09-09'
Description: 'TraceTrack Database Infrastructure - RDS PostgreSQL and ElastiCache Redis'

Parameters:
  ProjectName:
    Type: String
    Default: tracetrack
    Description: Name of the project for resource naming
  
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
    Description: Environment name
  
  DatabaseInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues: [db.t3.micro, db.t3.small, db.t3.medium, db.r5.large]
    Description: RDS instance class
  
  DatabaseEngine:
    Type: String
    Default: postgres
    Description: Database engine
  
  DatabaseEngineVersion:
    Type: String
    Default: '15.4'
    Description: PostgreSQL version
  
  DatabaseName:
    Type: String
    Default: tracetrack
    Description: Database name
  
  DatabaseUsername:
    Type: String
    Default: tracetrack_user
    Description: Database master username
  
  KMSKeyId:
    Type: String
    Default: ''
    Description: KMS Key ID for secret encryption (optional)
  
  DatabaseAllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 16384
    Description: Database allocated storage in GB
  
  DatabaseBackupRetentionPeriod:
    Type: Number
    Default: 7
    MinValue: 0
    MaxValue: 35
    Description: Backup retention period in days
  
  RedisNodeType:
    Type: String
    Default: cache.t3.micro
    AllowedValues: [cache.t3.micro, cache.t3.small, cache.t3.medium, cache.r5.large]
    Description: Redis node type
  
  RedisEngineVersion:
    Type: String
    Default: '7.0'
    Description: Redis engine version

Resources:
  # Database Subnet Group
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${ProjectName}-${Environment}-db-subnet-group'
      DBSubnetGroupDescription: Subnet group for TraceTrack database
      SubnetIds:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-private-subnet-1-id'
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-private-subnet-2-id'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment

  # Database Parameter Group
  DatabaseParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub '${ProjectName}-${Environment}-postgres-params'
      Description: Parameter group for TraceTrack PostgreSQL database
      Family: postgres15
      Parameters:
        shared_preload_libraries: pg_stat_statements
        max_connections: 200
        shared_buffers: 256MB
        effective_cache_size: 1GB
        maintenance_work_mem: 64MB
        checkpoint_completion_target: 0.9
        wal_buffers: 16MB
        default_statistics_target: 100
        random_page_cost: 1.1
        effective_io_concurrency: 200
        work_mem: 4MB
        min_wal_size: 1GB
        max_wal_size: 4GB
        max_worker_processes: 4
        max_parallel_workers_per_gather: 2
        max_parallel_workers: 4
        max_parallel_maintenance_workers: 2
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-postgres-params'

  # RDS PostgreSQL Database
  Database:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${Environment}-postgres'
      DBName: !Ref DatabaseName
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref DatabaseEngineVersion
      MasterUsername: !Ref DatabaseUsername
      ManageMasterUserPassword: true
      MasterUserSecret:
        KmsKeyId: !If [CreateKMSKey, !Ref SecretsKMSKey, !Ref KMSKeyId]
      AllocatedStorage: !Ref DatabaseAllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-db-sg-id'
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      DBParameterGroupName: !Ref DatabaseParameterGroup
      BackupRetentionPeriod: !Ref DatabaseBackupRetentionPeriod
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      DeletionProtection: !If [IsProduction, true, false]
      MultiAZ: !If [IsProduction, true, false]
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt DatabaseMonitoringRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-postgres'
        - Key: Environment
          Value: !Ref Environment

  # Database Monitoring Role
  DatabaseMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-rds-monitoring-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'
      Path: /

  # Redis Subnet Group
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub '${ProjectName}-${Environment}-redis-subnet-group'
      Description: Subnet group for TraceTrack Redis cache
      SubnetIds:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-private-subnet-1-id'
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-private-subnet-2-id'

  # Redis Parameter Group
  RedisParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupName: !Sub '${ProjectName}-${Environment}-redis-params'
      CacheParameterGroupFamily: redis7.x
      Description: Parameter group for TraceTrack Redis cache
      Properties:
        maxmemory-policy: allkeys-lru
        timeout: 300
        tcp-keepalive: 60

  # ElastiCache Redis Cluster
  RedisCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheClusterId: !Sub '${ProjectName}-${Environment}-redis'
      CacheNodeType: !Ref RedisNodeType
      Engine: redis
      EngineVersion: !Ref RedisEngineVersion
      NumCacheNodes: 1
      VpcSecurityGroupIds:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-redis-sg-id'
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      CacheParameterGroupName: !Ref RedisParameterGroup
      PreferredMaintenanceWindow: 'sun:05:00-sun:06:00'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-redis'
        - Key: Environment
          Value: !Ref Environment

  # KMS Key for Secrets Encryption
  SecretsKMSKey:
    Type: AWS::KMS::Key
    Condition: CreateKMSKey
    Properties:
      Description: !Sub 'KMS Key for ${ProjectName} ${Environment} secrets encryption'
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM root permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow ECS task execution role
            Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-${Environment}-task-execution-role'
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-${Environment}-task-role'
            Action:
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-secrets-key'
        - Key: Environment
          Value: !Ref Environment

  SecretsKMSKeyAlias:
    Type: AWS::KMS::Alias
    Condition: CreateKMSKey
    Properties:
      AliasName: !Sub 'alias/${ProjectName}-${Environment}-secrets'
      TargetKeyId: !Ref SecretsKMSKey

  # Database Secret Rotation (using RDS-managed secret)
  DatabaseSecretRotation:
    Type: AWS::SecretsManager::RotationSchedule
    Condition: IsProduction
    Properties:
      SecretId: !GetAtt Database.MasterUserSecret.SecretArn
      HostedRotationLambda:
        RotationType: PostgreSQLSingleUser
        RotationLambdaName: !Sub '${ProjectName}-${Environment}-db-rotation'
        VpcSecurityGroupIds: 
          - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-lambda-rotation-sg-id'
        VpcSubnetIds:
          - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-private-subnet-1-id'
          - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-private-subnet-2-id'
      RotationRules:
        AutomaticallyAfterDays: 30

  # Session Secret with CMK Encryption
  SessionSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}/${Environment}/session'
      Description: Session secret for TraceTrack
      GenerateSecretString:
        PasswordLength: 64
        ExcludeCharacters: '"@/\'
      KmsKeyId: !If [CreateKMSKey, !Ref SecretsKMSKey, !Ref KMSKeyId]
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-session-secret'
        - Key: Environment
          Value: !Ref Environment

Conditions:
  IsProduction: !Equals [!Ref Environment, production]
  CreateKMSKey: !Equals [!Ref KMSKeyId, '']

Outputs:
  DatabaseEndpoint:
    Description: RDS PostgreSQL endpoint
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-endpoint'

  DatabasePort:
    Description: RDS PostgreSQL port
    Value: !GetAtt Database.Endpoint.Port
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-port'

  DatabaseName:
    Description: Database name
    Value: !Ref DatabaseName
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-name'

  RedisEndpoint:
    Description: Redis cluster endpoint
    Value: !GetAtt RedisCluster.RedisEndpoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-redis-endpoint'

  RedisPort:
    Description: Redis cluster port
    Value: !GetAtt RedisCluster.RedisEndpoint.Port
    Export:
      Name: !Sub '${ProjectName}-${Environment}-redis-port'

  DatabaseSecretArn:
    Description: RDS-managed database secret ARN
    Value: !GetAtt Database.MasterUserSecret.SecretArn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-secret-arn'

  SessionSecretArn:
    Description: Session secret ARN
    Value: !Ref SessionSecret
    Export:
      Name: !Sub '${ProjectName}-${Environment}-session-secret-arn'