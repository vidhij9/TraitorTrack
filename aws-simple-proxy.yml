AWSTemplateFormatVersion: '2010-09-09'
Description: 'TraceTrack - Simple AWS Proxy to Replit'

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type

Resources:
  # Security Group
  ProxySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for TraceTrack proxy
      VpcId: vpc-02f263c88332b75e1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP traffic
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS traffic
      Tags:
        - Key: Name
          Value: TraceTrack-Proxy-SG

  # EC2 Instance - Simple Nginx Proxy
  ProxyInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0522ab6e1ddcc7055
      InstanceType: !Ref InstanceType
      SubnetId: subnet-06844ef4cdb8f47e3
      SecurityGroupIds:
        - !Ref ProxySecurityGroup
      Tags:
        - Key: Name
          Value: TraceTrack-AWS-Proxy
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update
          apt-get install -y nginx
          
          # Configure nginx as reverse proxy
          cat > /etc/nginx/sites-available/default <<'EOF'
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name _;
              
              location / {
                  proxy_pass http://4a1bf949-1caa-4cac-b77e-1c948bbfae72-00-2oi7cqf6mfw9y.picard.replit.dev;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
              
              location /health {
                  access_log off;
                  return 200 "healthy\n";
                  add_header Content-Type text/plain;
              }
          }
          EOF
          
          systemctl restart nginx
          
          # Create simple status page
          echo "<h1>TraceTrack AWS Proxy Active</h1>" > /var/www/html/status.html

Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref ProxyInstance
  
  PublicIP:
    Description: Public IP Address
    Value: !GetAtt ProxyInstance.PublicIp
  
  ProxyURL:
    Description: Proxy URL
    Value: !Sub 'http://${ProxyInstance.PublicIp}'